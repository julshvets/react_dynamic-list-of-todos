{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","catch","Response","Error","TodoList","React","memo","_ref","todos","setSelectedTodoId","selectedTodoId","_jsxs","className","children","_jsx","map","todo","id","completed","classNames","title","type","onClick","todoId","TodoFilter","selectedFilter","setSelectedFilter","searchQuery","setSearchQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedTodo","_useState","useState","_useState2","_slicedToArray","selectedUser","setSelectedUser","useEffect","userId","concat","href","email","name","App","todosFromServer","setTodosFromServer","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","visibleTodos","useMemo","filter","currentQuery","toLowerCase","includes","find","_Fragment","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e955bee7.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setSelectedTodoId: (todoId: number | null) => void;\n  selectedTodoId: number | null;\n}\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  setSelectedTodoId,\n  selectedTodoId,\n}) => {\n  const handleClickShowButton = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td\n              className=\"is-vcentered is-expanded\"\n            >\n              <p className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClickShowButton(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames('far',\n                      { 'fa-eye': selectedTodoId !== todo.id },\n                      { 'fa-eye-slash': selectedTodoId === todo.id })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\n\ninterface Props {\n  selectedFilter: string;\n  setSelectedFilter: (value:string) => void;\n  searchQuery: string;\n  setSearchQuery: (value:string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  selectedFilter,\n  setSelectedFilter,\n  searchQuery,\n  setSearchQuery,\n}) => {\n  const handleChangeFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedFilter(event.target.value);\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleClickDeleteButton = (() => {\n    setSearchQuery('');\n  });\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={handleChangeFilter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClickDeleteButton}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo | null;\n  setSelectedTodoId: (id: number | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = React.memo(({\n  selectedTodo,\n  setSelectedTodoId,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setSelectedUser);\n    }\n  }, [selectedTodo]);\n\n  const handleClickDeleteButton = () => {\n    setSelectedTodoId(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClickDeleteButton}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames(\n                { 'has-text-danger': !selectedTodo?.completed },\n                { 'has-text-success': selectedTodo?.completed },\n              )}\n              >\n                {selectedTodo?.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, {\n  useState,\n  useEffect,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport './App.scss';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n\n  useEffect(() => {\n    getTodos().then(setTodosFromServer);\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    let todos = todosFromServer;\n\n    if (selectedFilter) {\n      switch (selectedFilter) {\n        case 'active':\n          todos = todos.filter(todo => !todo.completed);\n          break;\n\n        case 'completed':\n          todos = todos.filter(todo => todo.completed);\n          break;\n\n        default:\n          todos = todosFromServer;\n          break;\n      }\n    }\n\n    if (searchQuery) {\n      const currentQuery = searchQuery.toLowerCase();\n\n      todos = todos.filter(todo => todo.title\n        .toLowerCase().includes(currentQuery));\n    }\n\n    return todos;\n  }, [selectedFilter, todosFromServer, searchQuery]);\n\n  const selectedTodo = useMemo(() => (\n    visibleTodos.find(todo => todo.id === selectedTodoId) || null\n  ), [selectedTodoId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedFilter={selectedFilter}\n                setSelectedFilter={setSelectedFilter}\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosFromServer.length === 0\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={visibleTodos}\n                    setSelectedTodoId={setSelectedTodoId}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodoId={setSelectedTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}